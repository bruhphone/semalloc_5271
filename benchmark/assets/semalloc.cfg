#------------------------------------------------------------------------------
# SPEC CPU(R) 2017 config for Clang on macOS with Apple Silicon processor
#------------------------------------------------------------------------------
#
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
#
# Apple command line tools could be installed using 'xcode-select --install'
# from Terminal or by installing xcode from https://developer.apple.com/xcode/
#
# SPEC tested this config file with:
#    Compiler version(s):    AppleClang 12
#    Operating system(s):    macOS 11.0 (Big Sur)
#    Hardware:               Apple Silicon MacMini with M1 processor
#
# WARNING - Fortran benchmarks are not supported by this config file.
#           Therefore, this config file cannot be used to do a
#           "reportable" run
#               https://www.spec.org/cpu2017/Docs/runcpu.html#reportable
#           For more information, see below under topic
#               "No Fortran"
#
# If your system differs, this config file might not work.
# You might find a better config file at https://www.spec.org/cpu2017/results
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   https://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%ifndef %{label}
%  define label "mytest"            # (2)      Use a label meaningful to *you*.
%endif


%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 8      #      Or, you can set it on the command line:
%endif                         #      'runcpu --define build_ncpus=nn'

%if %{label} =~ m/ /
%   error Your label "%{label}" contains spaces.  Please try underscores instead.
%endif
%if %{label} !~ m/^[a-zA-Z0-9._-]+$/
%   error Illegal character in label "%{label}".  Please use only alphanumerics, underscore, hyphen, and period.
%endif


#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

command_add_redirect = 1
flagsurl             = $[top]/config/flags/clang.xml
ignore_errors        = 1
iterations           = 1
label                = %{label}
line_width           = 1020
log_line_width       = 1020
makeflags            = --jobs=%{build_ncpus}
mean_anyway          = 1
output_format        = txt,html,cfg,pdf,csv
preenv               = 1
reportable           = 0
tune                 = base # EDIT: if you wish to try peak, add it here.
                            #       See notes "About Peak" below


#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads (Always one for AppleClang)
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?
#    a. Unknown, you will have to try it and see!
#
# To get you started, some suggestions:
#
#     copies - This config file defaults to testing only 1 copy.   You might
#              try changing it to match the number of cores on your system,
#              as reported by:
#                   sysctl machdep.cpu.core_count
#              Be sure you have enough memory.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config is intended for Apple command line tools which do not support OpenMP
#
intrate,fprate:
   copies           = 1   # EDIT to change number of copies (see above)
intspeed,fpspeed:
   threads          = 4


#------- Compilers ------------------------------------------------------------
LLVM_COMPILER_PATH=/app/llvm15/build/bin/
LLVM_COMPILER=clang

default:
   CC                      = wllvm    -std=c99 -Xclang -no-opaque-pointers -gdwarf-4 -Xclang -mno-constructor-aliases
   CXX                     = wllvm++  -std=c++03 -Xclang -no-opaque-pointers -gdwarf-4 -Xclang -mno-constructor-aliases
   # EXTRA_LDFLAGS           = -Xclang -no-opaque-pointers
   FC                      = XXX-if-you-have-a-Fortran-compiler-specify-it-here-XXX
   # How to say "Show me your version, please"
   CC_VERSION_OPTION       = --version
   CXX_VERSION_OPTION      = --version
   FC_VERSION_OPTION       = XXX-if-you-have-a-Fortran-compiler-specify-your-version-option-here-XXX

default:
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = 64-bit

#--- No Fortran -------
# Fortran benchmarks are not expected to work with this config file.
# If you wish, you can run the other benchmarks using:
#    runcpu no_fortran           - all CPU 2017 benchmarks that do not use Fortran
#    runcpu intrate_no_fortran   - integer rate benchmarks that do not use Fortran
#    runcpu intspeed_no_fortran  - integer speed benchmarks that do not use Fortran
#    runcpu fprate_no_fortran    - floating point rate benchmarks that do not use Fortran
#    runcpu fpspeed_no_fortran   - floating point speed benchmarks that do not use Fortran
#
# If you *do* have a Fortran compiler, then you will need to set the correct options for
# 'FC' and 'FC_VERSION_OPTION' just above -- see
#                http://www.spec.org/cpu2017/Docs/config.html#makeCompiler
#  You must also remove the 2 lines right after this comment.
any_fortran:
   fail_build = 1


#--------- Portability --------------------------------------------------------
default:               # data model applies to all benchmarks
    EXTRA_PORTABILITY = -DSPEC_LP64

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:  #lang='C'
   CPORTABILITY    = -DSPEC_LINUX_X64

502.gcc_r,602.gcc_s:
   CC    = wllvm    -std=c99 -Xclang -no-opaque-pointers -gdwarf-4 -fgnu89-inline -Xclang -mno-constructor-aliases
   CX    = wllvm++  -std=c++03 -Xclang -no-opaque-pointers -gdwarf-4 -fgnu89-inline -Xclang -mno-constructor-aliases

523.xalancbmk_r,623.xalancbmk_s:  #lang='CXX'
   PORTABILITY   = -DSPEC_LINUX
   
525.x264_r,625.x264_s:              # https://www.spec.org/cpu2017/Docs/benchmarks/525.x264_r.html
   EXTRA_CFLAGS = -fcommon

526.blender_r:  #lang='CXX,C'
   PORTABILITY   = -funsigned-char -DSPEC_LINUX


#-------- Tuning Flags common to Base and Peak --------------------------------

#--------  Base Tuning Flags ----------------------------------------------
# EDIT if needed -- If you run into errors, you may need to adjust the
#                   optimization.  See topic "Older GCC" above.
#
default=base:     # flags for all base
   OPTIMIZE       = -g -O3


#--------  Peak Tuning Flags ------------------------------------------------
# About Peak: This section is used only if you request it, either by setting
#             the tune option on the command line
#                 https://www.spec.org/cpu2017/Docs/runcpu.html#tune
#             or by setting it in this config file -- search for the word
#             'tune' above.   See also:
#                 https://www.spec.org/cpu2017/Docs/overview.html#Q16
default=peak:
   OPTIMIZE         = -g -Ofast
   PASS1_FLAGS      = -fprofile-instr-generate=pgo_data
   PASS2_FLAGS      = -fprofile-instr-use
   fdo_post1        = xcrun llvm-profdata merge -output=default.profdata pgo_data


#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler001   = Apple Clang version 12.xx.xxx

#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number)
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship
   fw_bios            = # Version Mumble released May-2099    # Firmware information

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
#  hw_cpu_name        = # Apple M?                            # chip name
#  hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
#  hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
#  hw_model           = # MacMumble 9999                      # system model name
#  hw_nchips          = # 99                                  # number chips enabled
#  hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options
   hw_nthreadspercore = # 1                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

#  hw_memory001       = # 999 GB (99 x 9 GB 2Rx4 PC4-2133P-R, # The 'PCn-etc' is from the JEDEC
#  hw_memory002       = # running at 1600 MHz)                # label on the DIMM.

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
#  hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
#  hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

   sw_file            = # OS X Extended (Encrypted)           # File System
#  sw_os              = # OS X 99.99.9 (99F99)                # Operating system and version
#  sw_other           = Xcode v99.99                          # And anything else performance relevant
#  sw_state           = # Run level 99                        # Software state.

   power_management   = # briefly summarize power settings 

# Note: Some commented-out fields above are automatically set to preliminary
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo

